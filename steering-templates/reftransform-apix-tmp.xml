<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

  <execute>
    <processor name="AIDA"/>
    <processor name="MyRefTransformProcessor"/>
    <processor name="Save"/>
    <processor name="EUTelUtilityPrintEventNumber"/>
  </execute>

  <global>
    <parameter name="LCIOInputFiles"> @LcioPath@/run@RunNumber@-track.slcio </parameter>
    <parameter name="GearXMLFile" value="@GearFilePath@/@GearFile@"/>
    <parameter name="MaxRecordNumber" value="@MaxRecordNumber@"/>
    <parameter name="SkipNEvents" value="@SkipNEvents@"/>
    <parameter name="SupressCheck" value="false"/>
    <parameter name="Verbosity" value="@Verbosity@"/>
  </global>

  <processor name="AIDA" type="AIDAProcessor">
    <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
    <!-- compression of output file 0: false >0: true (default) -->
    <parameter name="Compress" type="int">1 </parameter>
    <!-- filename without extension-->
    <parameter name="FileName" type="string" value="@HistogramPath@/@FilePrefix@-reftransform"/>
    <!-- type of output file root (default) or xml )-->
    <parameter name="FileType" type="string">root </parameter>
    <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
    <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
  </processor>

  <processor name="MyRefTransformProcessor" type="RefTransformProcessor">
  <!--Transform REF hits to global coordinate system, cut uncorrelated events and apply alignment.-->
   <!--Name of the collection containing REF TrackerData-->
   <parameter name="RefDataCollectionName" type="string" lcioInType="TrackerData">zsdata_apix </parameter>
   <!--Name of the output collection for the transformed and cut ref data-->
   <parameter name="TransformedRefDataCollectionName" type="string" lcioOutType="TrackerHit">refhit </parameter>
   <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
   <parameter name="Verbosity" type="string">DEBUG </parameter>
   <!--File name of the cut information file. Add .csv-->
   <parameter name="cutDbFileName" type="string">@DatabasePath@/run@RunNUmber@-ref-cut-db.csv </parameter>
   <!--Width of the inclusion zone for cutting uncorrelated events in multiples of sigma.-->
   <parameter name="cutWidthTimesSigma" type="int">5</parameter>
   <!--Wether or not to flip the X coordinate of the REF hits-->
   <parameter name="flipXCoordinate" type="bool">true </parameter>
   <!--Wether or not to flip the Y coordinate of the REF hits-->
   <parameter name="flipYCoordinate" type="bool">true </parameter>
   <parameter name="swapRefAxis" type="bool">false </parameter>
   <!--File name of the align-DB generated by this processor. Add .slcio-->
   <parameter name="refAlignDbFileName" type="string">ref-align-db.slcio </parameter>
   <parameter name="csvOutputFilename" type="string">@CsvPath@/run@RunNumber@-reftracks.csv</parameter>
   <parameter name="csvOutputEnable" type="bool">true</parameter>
   <parameter name="debugCsvOutput" type="bool">false</parameter>
   <!--Sensor ID of the reference plane specified in the GEAR file.-->
   <parameter name="refSensorId" type="int">20 </parameter>
 </processor>
 

  <processor name="Save" type="EUTelOutputProcessor">
    <!--Writes the current event to the specified LCIO outputfile. Eventually it adds a EORE at the of the file if it was missing Needs to be the last ActiveProcessor.-->
    <!--drops the named collections from the event-->
    <!--parameter name="DropCollectionNames" type="StringVec">TPCHits HCalHits  </parameter-->
    <!--drops all collections of the given type from the event-->
    <!--parameter name="DropCollectionTypes" type="StringVec">SimTrackerHit SimCalorimeterHit  </parameter-->
    <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
    <!--parameter name="FullSubsetCollections" type="StringVec">MCParticlesSkimmed  </parameter-->
    <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
    <!--parameter name="KeepCollectionNames" type="StringVec">MyPreciousSimTrackerHits  </parameter-->
    <!-- name of output file -->
    <parameter name="LCIOOutputFile" type="string" value="@LcioPath@/run@RunNumber@-reftransform.slcio"/>
    <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
    <parameter name="LCIOWriteMode" type="string" value="WRITE_NEW"/>
    <!--Set it to true to remove intermediate EORE in merged runs-->
    <parameter name="SkipIntermediateEORE" type="bool">true </parameter>
    <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
    <!--parameter name="SplitFileSizekB" type="int">1992294 </parameter-->
    <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
    <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
  </processor>

  <processor name="EUTelUtilityPrintEventNumber" type="EUTelUtilityPrintEventNumber">
    <!--EUTelUtilityPrintEventNumber prints event number to screen depending on the verbosity level-->
    <!--Print event number for every n-th event-->
    <parameter name="EveryNEvents" type="int">2500 </parameter>
    <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
    <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
    <!--print the event timestamp as read from LCIO-->
    <!--parameter name="printTimestamp" type="bool">false </parameter-->
  </processor>

</marlin>
